@page "/account"
@inject HttpClient Http
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using ProjectForex.Shared
@attribute [Authorize]

<h3>Account</h3>

@if (AccountMains == null)
{
    <p><em>Problem with API</em></p>
}
else
{
    @*<p>Current Account: @AccountMains.account.alias</p>
    <p>Account ID: @AccountMains.account.id</p>
    <p>Balance: €@AccountMains.account.balance</p>
    <p>Currency using: @AccountMains.account.currency</p>
    <p>Last Transaction number: @AccountMains.account.lastTransactionID</p>
    <p>Open Positions: @AccountMains.account.openPositionCount</p>
    <p>Open Trades: @AccountMains.account.openTradeCount</p>
    <p>Pending Order: @AccountMains.account.pendingOrderCount</p>
    <p>Withdrawal Limit: @AccountMains.account.withdrawalLimit</p>
    <p>Current Values of Positions Bought: €@AccountMains.account.positionValue</p>*@


    <BSButton Color="Color.Primary" OnClick="onclick">Current Account</BSButton>
    <BSCollapse IsOpen="@IsOpen">
        <BSCard CardType="CardType.Card">
            <BSCard CardType="CardType.Text">
                @AccountMains.account.alias
            </BSCard>
        </BSCard>
    </BSCollapse>

    <BSButton Color="Color.Primary" OnClick="onclick">Account ID</BSButton>
    <BSCollapse IsOpen="@IsOpen">
        <BSCard CardType="CardType.Card">
            <BSCard CardType="CardType.Text">
                @AccountMains.account.id
            </BSCard>
        </BSCard>
    </BSCollapse>

    <BSButton Color="Color.Primary" OnClick="onclick">Balance</BSButton>
    <BSCollapse IsOpen="@IsOpen">
        <BSCard CardType="CardType.Card">
            <BSCard CardType="CardType.Text">
                €@AccountMains.account.balance
            </BSCard>
        </BSCard>
    </BSCollapse>

    <BSButton Color="Color.Primary" OnClick="onclick">Currency using</BSButton>
    <BSCollapse IsOpen="@IsOpen">
        <BSCard CardType="CardType.Card">
            <BSCard CardType="CardType.Text">
                @AccountMains.account.currency
            </BSCard>
        </BSCard>
    </BSCollapse>

    <BSButton Color="Color.Primary" OnClick="onclick">Last Transaction number</BSButton>
    <BSCollapse IsOpen="@IsOpen">
        <BSCard CardType="CardType.Card">
            <BSCard CardType="CardType.Text">
                @AccountMains.account.lastTransactionID
            </BSCard>
        </BSCard>
    </BSCollapse>

    <BSButton Color="Color.Primary" OnClick="onclick">Open Positions</BSButton>
    <BSCollapse IsOpen="@IsOpen">
        <BSCard CardType="CardType.Card">
            <BSCard CardType="CardType.Text">
                @AccountMains.account.openPositionCount
            </BSCard>
        </BSCard>
    </BSCollapse>

    <BSButton Color="Color.Primary" OnClick="onclick">Open Trades</BSButton>
    <BSCollapse IsOpen="@IsOpen">
        <BSCard CardType="CardType.Card">
            <BSCard CardType="CardType.Text">
                @AccountMains.account.openTradeCount
            </BSCard>
        </BSCard>
    </BSCollapse>

    <BSButton Color="Color.Primary" OnClick="onclick">Pending Order</BSButton>
    <BSCollapse IsOpen="@IsOpen">
        <BSCard CardType="CardType.Card">
            <BSCard CardType="CardType.Text">
                @AccountMains.account.pendingOrderCount
            </BSCard>
        </BSCard>
    </BSCollapse>

    <BSButton Color="Color.Primary" OnClick="onclick">Withdrawal Limit</BSButton>
    <BSCollapse IsOpen="@IsOpen">
        <BSCard CardType="CardType.Card">
            <BSCard CardType="CardType.Text">
                @AccountMains.account.withdrawalLimit
            </BSCard>
        </BSCard>
    </BSCollapse>

    <BSButton Color="Color.Primary" OnClick="onclick">Current Values of Positions Bought</BSButton>
    <BSCollapse IsOpen="@IsOpen">
        <BSCard CardType="CardType.Card">
            <BSCard CardType="CardType.Text">
                €@AccountMains.account.positionValue
            </BSCard>
        </BSCard>
    </BSCollapse>


}
@code {
    bool IsOpen { get; set; }
    void onclick(MouseEventArgs e)
    {
        IsOpen = !IsOpen;
        StateHasChanged();
    }
}